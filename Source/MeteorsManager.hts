require('meteor');

MeteorsManager = #;

let TIMER_INITIAL_STATE = 10;
let MAX_METEORS = 3;
let timer = TIMER_INITIAL_STATE;

let alive_meteors = #{};

MeteorsManager.Update = function(dt) {
    for (let i, meteor in ##(alive_meteors)) {
        Meteor.Update(meteor, dt);
    }

    timer -= dt;

    if (timer < 0) {
        timer = TIMER_INITIAL_STATE;
        Spawn_meteors();
    }
}

MeteorsManager.Draw = function() {
    for (let i, meteor in ##(alive_meteors)) {
        Meteor.Draw(meteor);
    }
}

MeteorsManager.Resolve_Planet_Colisions = function(planet) {
	for(let i, meteor in ##(alive_meteors))
	{
        let collides, index = Planet.Collides(planet, meteor);

        if (collides) {
            if (meteor.type_terraformation == Meteor.TYPE.TERRAFORMATION.MOUNTAIN) {
                Planet.Impact(planet, i, Meteor.DEFAULT_IMPACT_FORCE);
            }
            if (meteor.type_terraformation == Meteor.TYPE.TERRAFORMATION.TNT) {
                Planet.Impact(planet, i, -Meteor.DEFAULT_IMPACT_FORCE);
            }
            // Meteor.Delete(meteor);
            table.remove(alive_meteors, i);
        }
	}
}

function Spawn_meteors() {
    let nb_of_meteors_togenerate = math.random(MAX_METEORS);
    
    for(let i = 1 ... nb_of_meteors_togenerate) {
        table.insert(
            alive_meteors,
            Get_Random_Meteor()
        );
    }
}

function Get_Random_Meteor() {
    let terra_index = math.random(3);
    let effect_index = math.random(7);
    let origin = math.random() * math.pi * 2;

    let terra, effect;

    if (terra_index == 1) { terra = Meteor.TYPE.TERRAFORMATION.MOUNTAIN; }
    if (terra_index == 2) { terra = Meteor.TYPE.TERRAFORMATION.TNT; }
    if (terra_index == 3) { terra = Meteor.TYPE.TERRAFORMATION.NEUTRAL; }

    if (effect_index == 1) { effect = Meteor.TYPE.EFFECT.ICE; }
    if (effect_index == 2) { effect = Meteor.TYPE.EFFECT.LIFE_ANIMAL; }
    if (effect_index == 3) { effect = Meteor.TYPE.EFFECT.LIFE_MUSHROOM; }
    if (effect_index == 4) { effect = Meteor.TYPE.EFFECT.LIFE_VEGETAL; }
    if (effect_index == 5) { effect = Meteor.TYPE.EFFECT.ATMOSPHERE_OXYGEN; }
    if (effect_index == 6) { effect = Meteor.TYPE.EFFECT.ATMOSPHERE_CO2; }
    if (effect_index == 7) { effect = Meteor.TYPE.EFFECT.ATMOSPHERE_SPORES; }

    return Meteor.New(terra, effect, origin);
}